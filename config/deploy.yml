service: spacedevs

# Name of the container image.
image: spacedevs/spacedevs

servers:
  web: 
    - <%= ENV.fetch("APP_HOST", "127.0.0.1") %>

proxy: false

registry:
  server:   <%= ENV.fetch("KAMAL_REGISTRY_SERVER", "hub.docker.io") %>
  username: <%= ENV.fetch("KAMAL_REGISTRY_USERNAME", "kamal") %>
  password:
    - KAMAL_REGISTRY_PASSWORD

aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


env:
  clear:
    DB_HOST: spacedevs-db
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - POSTGRES_DB

# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
# volumes:
#   - "spacedevs_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

ssh:
  user: ubuntu

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:17
    host: <%= ENV.fetch("APP_HOST", "127.0.0.1") %>
    env:
      secret:
        - POSTGRES_PASSWORD
        - POSTGRES_DB
        - POSTGRES_USER
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
